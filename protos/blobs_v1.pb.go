// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: protos/blobs_v1.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Category      string            `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Code          string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CorrelationId string            `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status        string            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Message       string            `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Cause         string            `protobuf:"bytes,7,opt,name=cause,proto3" json:"cause,omitempty"`
	StackTrace    string            `protobuf:"bytes,8,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Details       map[string]string `protobuf:"bytes,9,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ErrorDescription) Reset() {
	*x = ErrorDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDescription) ProtoMessage() {}

func (x *ErrorDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDescription.ProtoReflect.Descriptor instead.
func (*ErrorDescription) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorDescription) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ErrorDescription) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ErrorDescription) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorDescription) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *ErrorDescription) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ErrorDescription) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorDescription) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *ErrorDescription) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *ErrorDescription) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

type PagingParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip  int64 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take  int32 `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
	Total bool  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PagingParams) Reset() {
	*x = PagingParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingParams) ProtoMessage() {}

func (x *PagingParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingParams.ProtoReflect.Descriptor instead.
func (*PagingParams) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{1}
}

func (x *PagingParams) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *PagingParams) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

func (x *PagingParams) GetTotal() bool {
	if x != nil {
		return x.Total
	}
	return false
}

type BlobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identification
	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Content
	Size        int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	ContentType string `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	CreateTime  string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime  string `protobuf:"bytes,7,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Completed   bool   `protobuf:"varint,8,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *BlobInfo) Reset() {
	*x = BlobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfo) ProtoMessage() {}

func (x *BlobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfo.ProtoReflect.Descriptor instead.
func (*BlobInfo) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{2}
}

func (x *BlobInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BlobInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *BlobInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlobInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BlobInfo) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *BlobInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *BlobInfo) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *BlobInfo) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type BlobInfoPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*BlobInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BlobInfoPage) Reset() {
	*x = BlobInfoPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfoPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfoPage) ProtoMessage() {}

func (x *BlobInfoPage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfoPage.ProtoReflect.Descriptor instead.
func (*BlobInfoPage) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{3}
}

func (x *BlobInfoPage) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BlobInfoPage) GetData() []*BlobInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// The request message containing the blob info page request.
type BlobInfoPageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string            `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Filter        map[string]string `protobuf:"bytes,2,rep,name=filter,proto3" json:"filter,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Paging        *PagingParams     `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *BlobInfoPageRequest) Reset() {
	*x = BlobInfoPageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfoPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfoPageRequest) ProtoMessage() {}

func (x *BlobInfoPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfoPageRequest.ProtoReflect.Descriptor instead.
func (*BlobInfoPageRequest) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{4}
}

func (x *BlobInfoPageRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BlobInfoPageRequest) GetFilter() map[string]string {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *BlobInfoPageRequest) GetPaging() *PagingParams {
	if x != nil {
		return x.Paging
	}
	return nil
}

// The response message containing the blob info page response
type BlobInfoPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Page  *BlobInfoPage     `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *BlobInfoPageReply) Reset() {
	*x = BlobInfoPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfoPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfoPageReply) ProtoMessage() {}

func (x *BlobInfoPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfoPageReply.ProtoReflect.Descriptor instead.
func (*BlobInfoPageReply) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{5}
}

func (x *BlobInfoPageReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BlobInfoPageReply) GetPage() *BlobInfoPage {
	if x != nil {
		return x.Page
	}
	return nil
}

// The request message containing the blob ids request.
type BlobIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	BlobIds       []string `protobuf:"bytes,2,rep,name=blob_ids,json=blobIds,proto3" json:"blob_ids,omitempty"`
}

func (x *BlobIdsRequest) Reset() {
	*x = BlobIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobIdsRequest) ProtoMessage() {}

func (x *BlobIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobIdsRequest.ProtoReflect.Descriptor instead.
func (*BlobIdsRequest) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{6}
}

func (x *BlobIdsRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BlobIdsRequest) GetBlobIds() []string {
	if x != nil {
		return x.BlobIds
	}
	return nil
}

// The request message containing the blob id request.
type BlobIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	BlobId        string `protobuf:"bytes,2,opt,name=blob_id,json=blobId,proto3" json:"blob_id,omitempty"`
}

func (x *BlobIdRequest) Reset() {
	*x = BlobIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobIdRequest) ProtoMessage() {}

func (x *BlobIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobIdRequest.ProtoReflect.Descriptor instead.
func (*BlobIdRequest) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{7}
}

func (x *BlobIdRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BlobIdRequest) GetBlobId() string {
	if x != nil {
		return x.BlobId
	}
	return ""
}

// The request message containing the blob info object request.
type BlobInfoObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string    `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Blob          *BlobInfo `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
}

func (x *BlobInfoObjectRequest) Reset() {
	*x = BlobInfoObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfoObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfoObjectRequest) ProtoMessage() {}

func (x *BlobInfoObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfoObjectRequest.ProtoReflect.Descriptor instead.
func (*BlobInfoObjectRequest) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{8}
}

func (x *BlobInfoObjectRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BlobInfoObjectRequest) GetBlob() *BlobInfo {
	if x != nil {
		return x.Blob
	}
	return nil
}

// The response message containing the blob info objects response
type BlobInfoObjectsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Blobs []*BlobInfo       `protobuf:"bytes,2,rep,name=blobs,proto3" json:"blobs,omitempty"`
}

func (x *BlobInfoObjectsReply) Reset() {
	*x = BlobInfoObjectsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfoObjectsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfoObjectsReply) ProtoMessage() {}

func (x *BlobInfoObjectsReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfoObjectsReply.ProtoReflect.Descriptor instead.
func (*BlobInfoObjectsReply) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{9}
}

func (x *BlobInfoObjectsReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BlobInfoObjectsReply) GetBlobs() []*BlobInfo {
	if x != nil {
		return x.Blobs
	}
	return nil
}

// The response message containing the blob info object response
type BlobInfoObjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Blob  *BlobInfo         `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
}

func (x *BlobInfoObjectReply) Reset() {
	*x = BlobInfoObjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobInfoObjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobInfoObjectReply) ProtoMessage() {}

func (x *BlobInfoObjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobInfoObjectReply.ProtoReflect.Descriptor instead.
func (*BlobInfoObjectReply) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{10}
}

func (x *BlobInfoObjectReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BlobInfoObjectReply) GetBlob() *BlobInfo {
	if x != nil {
		return x.Blob
	}
	return nil
}

// The response message containing the blob uri response
type BlobUriReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Uri   string            `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *BlobUriReply) Reset() {
	*x = BlobUriReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobUriReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobUriReply) ProtoMessage() {}

func (x *BlobUriReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobUriReply.ProtoReflect.Descriptor instead.
func (*BlobUriReply) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{11}
}

func (x *BlobUriReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BlobUriReply) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// The request message containing the blob token request.
type BlobTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Token         string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *BlobTokenRequest) Reset() {
	*x = BlobTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobTokenRequest) ProtoMessage() {}

func (x *BlobTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobTokenRequest.ProtoReflect.Descriptor instead.
func (*BlobTokenRequest) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{12}
}

func (x *BlobTokenRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BlobTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// The request message containing the blob token with chunk request.
type BlobTokenWithChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Token         string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Chunk         string `protobuf:"bytes,3,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *BlobTokenWithChunkRequest) Reset() {
	*x = BlobTokenWithChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobTokenWithChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobTokenWithChunkRequest) ProtoMessage() {}

func (x *BlobTokenWithChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobTokenWithChunkRequest.ProtoReflect.Descriptor instead.
func (*BlobTokenWithChunkRequest) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{13}
}

func (x *BlobTokenWithChunkRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BlobTokenWithChunkRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BlobTokenWithChunkRequest) GetChunk() string {
	if x != nil {
		return x.Chunk
	}
	return ""
}

// The response message containing the blob token response
type BlobTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Token string            `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *BlobTokenReply) Reset() {
	*x = BlobTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobTokenReply) ProtoMessage() {}

func (x *BlobTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobTokenReply.ProtoReflect.Descriptor instead.
func (*BlobTokenReply) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{14}
}

func (x *BlobTokenReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BlobTokenReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// The response message containing the blob empty response
type BlobEmptyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BlobEmptyReply) Reset() {
	*x = BlobEmptyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobEmptyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobEmptyReply) ProtoMessage() {}

func (x *BlobEmptyReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobEmptyReply.ProtoReflect.Descriptor instead.
func (*BlobEmptyReply) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{15}
}

func (x *BlobEmptyReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

// The request message containing the blob read request.
type BlobReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CorrelationId string `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	BlobId        string `protobuf:"bytes,2,opt,name=blob_id,json=blobId,proto3" json:"blob_id,omitempty"`
	Skip          int64  `protobuf:"varint,3,opt,name=skip,proto3" json:"skip,omitempty"`
	Take          int64  `protobuf:"varint,4,opt,name=take,proto3" json:"take,omitempty"`
}

func (x *BlobReadRequest) Reset() {
	*x = BlobReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobReadRequest) ProtoMessage() {}

func (x *BlobReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobReadRequest.ProtoReflect.Descriptor instead.
func (*BlobReadRequest) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{16}
}

func (x *BlobReadRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BlobReadRequest) GetBlobId() string {
	if x != nil {
		return x.BlobId
	}
	return ""
}

func (x *BlobReadRequest) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *BlobReadRequest) GetTake() int64 {
	if x != nil {
		return x.Take
	}
	return 0
}

// The response message containing the blob chunk response
type BlobChunkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Chunk string            `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *BlobChunkReply) Reset() {
	*x = BlobChunkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_blobs_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobChunkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobChunkReply) ProtoMessage() {}

func (x *BlobChunkReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_blobs_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobChunkReply.ProtoReflect.Descriptor instead.
func (*BlobChunkReply) Descriptor() ([]byte, []int) {
	return file_protos_blobs_v1_proto_rawDescGZIP(), []int{17}
}

func (x *BlobChunkReply) GetError() *ErrorDescription {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *BlobChunkReply) GetChunk() string {
	if x != nil {
		return x.Chunk
	}
	return ""
}

var File_protos_blobs_v1_proto protoreflect.FileDescriptor

var file_protos_blobs_v1_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76,
	0x31, 0x22, 0xe5, 0x02, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x3a, 0x0a,
	0x0c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x0c, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x6b,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xdb, 0x01, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x62,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x4c, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x62,
	0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xea, 0x01, 0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c,
	0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x71, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31,
	0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x62, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x15, 0x42, 0x6c, 0x6f, 0x62,
	0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62,
	0x22, 0x72, 0x0a, 0x14, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x62,
	0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x62, 0x73, 0x22, 0x6f, 0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f,
	0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a,
	0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x62, 0x6c, 0x6f, 0x62, 0x22, 0x52, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x55, 0x72, 0x69,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x4f, 0x0a, 0x10, 0x42, 0x6c, 0x6f,
	0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6e, 0x0a, 0x19, 0x42, 0x6c,
	0x6f, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x58, 0x0a, 0x0e, 0x42, 0x6c,
	0x6f, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x42, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x62, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x79, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x62,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6b, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x61, 0x6b, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x32, 0xa3, 0x09,
	0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x12, 0x53, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d,
	0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10,
	0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x73,
	0x12, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x6c, 0x6f,
	0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e,
	0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x17,
	0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f,
	0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f,
	0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x75, 0x72, 0x69, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x17,
	0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f,
	0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x55, 0x72, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x10, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31,
	0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x10, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x62,
	0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f, 0x62,
	0x6c, 0x6f, 0x62, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x62, 0x6c, 0x6f, 0x62,
	0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e,
	0x66, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x10, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42,
	0x6c, 0x6f, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x12, 0x17,
	0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f,
	0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x19, 0x2e, 0x62, 0x6c,
	0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42,
	0x6c, 0x6f, 0x62, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62,
	0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x62,
	0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x14, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x11,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x62, 0x79, 0x5f, 0x69,
	0x64, 0x12, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f,
	0x62, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f,
	0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x18, 0x2e,
	0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f,
	0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x42, 0x55, 0x0a, 0x2a, 0x70, 0x69, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x31, 0x42, 0x0c, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50,
	0x01, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0xa2, 0x02, 0x0c, 0x42, 0x4c,
	0x4f, 0x42, 0x53, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protos_blobs_v1_proto_rawDescOnce sync.Once
	file_protos_blobs_v1_proto_rawDescData = file_protos_blobs_v1_proto_rawDesc
)

func file_protos_blobs_v1_proto_rawDescGZIP() []byte {
	file_protos_blobs_v1_proto_rawDescOnce.Do(func() {
		file_protos_blobs_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_blobs_v1_proto_rawDescData)
	})
	return file_protos_blobs_v1_proto_rawDescData
}

var file_protos_blobs_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_protos_blobs_v1_proto_goTypes = []interface{}{
	(*ErrorDescription)(nil),          // 0: blobs_v1.ErrorDescription
	(*PagingParams)(nil),              // 1: blobs_v1.PagingParams
	(*BlobInfo)(nil),                  // 2: blobs_v1.BlobInfo
	(*BlobInfoPage)(nil),              // 3: blobs_v1.BlobInfoPage
	(*BlobInfoPageRequest)(nil),       // 4: blobs_v1.BlobInfoPageRequest
	(*BlobInfoPageReply)(nil),         // 5: blobs_v1.BlobInfoPageReply
	(*BlobIdsRequest)(nil),            // 6: blobs_v1.BlobIdsRequest
	(*BlobIdRequest)(nil),             // 7: blobs_v1.BlobIdRequest
	(*BlobInfoObjectRequest)(nil),     // 8: blobs_v1.BlobInfoObjectRequest
	(*BlobInfoObjectsReply)(nil),      // 9: blobs_v1.BlobInfoObjectsReply
	(*BlobInfoObjectReply)(nil),       // 10: blobs_v1.BlobInfoObjectReply
	(*BlobUriReply)(nil),              // 11: blobs_v1.BlobUriReply
	(*BlobTokenRequest)(nil),          // 12: blobs_v1.BlobTokenRequest
	(*BlobTokenWithChunkRequest)(nil), // 13: blobs_v1.BlobTokenWithChunkRequest
	(*BlobTokenReply)(nil),            // 14: blobs_v1.BlobTokenReply
	(*BlobEmptyReply)(nil),            // 15: blobs_v1.BlobEmptyReply
	(*BlobReadRequest)(nil),           // 16: blobs_v1.BlobReadRequest
	(*BlobChunkReply)(nil),            // 17: blobs_v1.BlobChunkReply
	nil,                               // 18: blobs_v1.ErrorDescription.DetailsEntry
	nil,                               // 19: blobs_v1.BlobInfoPageRequest.FilterEntry
}
var file_protos_blobs_v1_proto_depIdxs = []int32{
	18, // 0: blobs_v1.ErrorDescription.details:type_name -> blobs_v1.ErrorDescription.DetailsEntry
	2,  // 1: blobs_v1.BlobInfoPage.data:type_name -> blobs_v1.BlobInfo
	19, // 2: blobs_v1.BlobInfoPageRequest.filter:type_name -> blobs_v1.BlobInfoPageRequest.FilterEntry
	1,  // 3: blobs_v1.BlobInfoPageRequest.paging:type_name -> blobs_v1.PagingParams
	0,  // 4: blobs_v1.BlobInfoPageReply.error:type_name -> blobs_v1.ErrorDescription
	3,  // 5: blobs_v1.BlobInfoPageReply.page:type_name -> blobs_v1.BlobInfoPage
	2,  // 6: blobs_v1.BlobInfoObjectRequest.blob:type_name -> blobs_v1.BlobInfo
	0,  // 7: blobs_v1.BlobInfoObjectsReply.error:type_name -> blobs_v1.ErrorDescription
	2,  // 8: blobs_v1.BlobInfoObjectsReply.blobs:type_name -> blobs_v1.BlobInfo
	0,  // 9: blobs_v1.BlobInfoObjectReply.error:type_name -> blobs_v1.ErrorDescription
	2,  // 10: blobs_v1.BlobInfoObjectReply.blob:type_name -> blobs_v1.BlobInfo
	0,  // 11: blobs_v1.BlobUriReply.error:type_name -> blobs_v1.ErrorDescription
	0,  // 12: blobs_v1.BlobTokenReply.error:type_name -> blobs_v1.ErrorDescription
	0,  // 13: blobs_v1.BlobEmptyReply.error:type_name -> blobs_v1.ErrorDescription
	0,  // 14: blobs_v1.BlobChunkReply.error:type_name -> blobs_v1.ErrorDescription
	4,  // 15: blobs_v1.Blobs.get_blobs_by_filter:input_type -> blobs_v1.BlobInfoPageRequest
	6,  // 16: blobs_v1.Blobs.get_blobs_by_ids:input_type -> blobs_v1.BlobIdsRequest
	7,  // 17: blobs_v1.Blobs.get_blob_by_id:input_type -> blobs_v1.BlobIdRequest
	7,  // 18: blobs_v1.Blobs.get_blob_uri_by_id:input_type -> blobs_v1.BlobIdRequest
	8,  // 19: blobs_v1.Blobs.begin_blob_write:input_type -> blobs_v1.BlobInfoObjectRequest
	13, // 20: blobs_v1.Blobs.write_blob_chunk:input_type -> blobs_v1.BlobTokenWithChunkRequest
	13, // 21: blobs_v1.Blobs.end_blob_write:input_type -> blobs_v1.BlobTokenWithChunkRequest
	12, // 22: blobs_v1.Blobs.abort_blob_write:input_type -> blobs_v1.BlobTokenRequest
	7,  // 23: blobs_v1.Blobs.begin_blob_read:input_type -> blobs_v1.BlobIdRequest
	16, // 24: blobs_v1.Blobs.read_blob_chunk:input_type -> blobs_v1.BlobReadRequest
	7,  // 25: blobs_v1.Blobs.end_blob_read:input_type -> blobs_v1.BlobIdRequest
	8,  // 26: blobs_v1.Blobs.update_blob_info:input_type -> blobs_v1.BlobInfoObjectRequest
	6,  // 27: blobs_v1.Blobs.mark_blobs_completed:input_type -> blobs_v1.BlobIdsRequest
	7,  // 28: blobs_v1.Blobs.delete_blob_by_id:input_type -> blobs_v1.BlobIdRequest
	6,  // 29: blobs_v1.Blobs.delete_blobs_by_ids:input_type -> blobs_v1.BlobIdsRequest
	5,  // 30: blobs_v1.Blobs.get_blobs_by_filter:output_type -> blobs_v1.BlobInfoPageReply
	9,  // 31: blobs_v1.Blobs.get_blobs_by_ids:output_type -> blobs_v1.BlobInfoObjectsReply
	10, // 32: blobs_v1.Blobs.get_blob_by_id:output_type -> blobs_v1.BlobInfoObjectReply
	11, // 33: blobs_v1.Blobs.get_blob_uri_by_id:output_type -> blobs_v1.BlobUriReply
	14, // 34: blobs_v1.Blobs.begin_blob_write:output_type -> blobs_v1.BlobTokenReply
	14, // 35: blobs_v1.Blobs.write_blob_chunk:output_type -> blobs_v1.BlobTokenReply
	10, // 36: blobs_v1.Blobs.end_blob_write:output_type -> blobs_v1.BlobInfoObjectReply
	15, // 37: blobs_v1.Blobs.abort_blob_write:output_type -> blobs_v1.BlobEmptyReply
	10, // 38: blobs_v1.Blobs.begin_blob_read:output_type -> blobs_v1.BlobInfoObjectReply
	17, // 39: blobs_v1.Blobs.read_blob_chunk:output_type -> blobs_v1.BlobChunkReply
	15, // 40: blobs_v1.Blobs.end_blob_read:output_type -> blobs_v1.BlobEmptyReply
	10, // 41: blobs_v1.Blobs.update_blob_info:output_type -> blobs_v1.BlobInfoObjectReply
	15, // 42: blobs_v1.Blobs.mark_blobs_completed:output_type -> blobs_v1.BlobEmptyReply
	15, // 43: blobs_v1.Blobs.delete_blob_by_id:output_type -> blobs_v1.BlobEmptyReply
	15, // 44: blobs_v1.Blobs.delete_blobs_by_ids:output_type -> blobs_v1.BlobEmptyReply
	30, // [30:45] is the sub-list for method output_type
	15, // [15:30] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_protos_blobs_v1_proto_init() }
func file_protos_blobs_v1_proto_init() {
	if File_protos_blobs_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_blobs_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfoPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfoPageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfoPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfoObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfoObjectsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobInfoObjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobUriReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobTokenWithChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobEmptyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_blobs_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobChunkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_blobs_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_blobs_v1_proto_goTypes,
		DependencyIndexes: file_protos_blobs_v1_proto_depIdxs,
		MessageInfos:      file_protos_blobs_v1_proto_msgTypes,
	}.Build()
	File_protos_blobs_v1_proto = out.File
	file_protos_blobs_v1_proto_rawDesc = nil
	file_protos_blobs_v1_proto_goTypes = nil
	file_protos_blobs_v1_proto_depIdxs = nil
}
